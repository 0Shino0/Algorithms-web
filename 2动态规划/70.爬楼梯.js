/**
 * 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

    每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
 */


/**
 * @param {number} n
 * @return {number}
 */
 var climbStairs = function(n) {
    /* 
    参考思路：
            对于这道题，我们可以采用动态规划的办法
        1. 定义状态
            dp[i]表示第i个阶梯有多少种办法到达
        2. 状态转移
            从题我们可知，每次只能跳1步或者2步，也就是说对于第i块阶梯来说，它可能是从第i-1块跳了1步到达的，也可能是从第i-2块阶梯跳2步到达的，因此
    */
   let dp = [];
   dp[0] = dp[1] = 1;
   for(let i = 2; i <= n; i++){
       dp[i] = dp[i-1] + dp[i-2];
   }
   return dp[n]
};